{"version":3,"sources":["ng://reactive-json-form-ng/lib/core/context.ts","null","ng://reactive-json-form-ng/lib/core/abstractwidget.ts","ng://reactive-json-form-ng/lib/core/expressions.ts","ng://reactive-json-form-ng/lib/core/defaultwidget.component.ts","ng://reactive-json-form-ng/lib/core/widgetregistry.service.ts","ng://reactive-json-form-ng/lib/core/widget.directive.ts","ng://reactive-json-form-ng/lib/core/format.ts","ng://reactive-json-form-ng/lib/core/routedwidget.component.ts","ng://reactive-json-form-ng/lib/core/core.module.ts","ng://reactive-json-form-ng/lib/core/formfieldwidget.ts","ng://reactive-json-form-ng/lib/material/material.module.ts","ng://reactive-json-form-ng/lib/material/formfield/input/input.component.ts","ng://reactive-json-form-ng/lib/material/formfield/checkbox/checkbox.component.ts","ng://reactive-json-form-ng/lib/material/formfield/toggle/toggle.component.ts","ng://reactive-json-form-ng/lib/material/formfield/slider/slider.component.ts","ng://reactive-json-form-ng/lib/material/formfield/button/button.component.ts","ng://reactive-json-form-ng/lib/material/formfield/form/form.component.ts","ng://reactive-json-form-ng/lib/material/formfield/autocomplete/autocomplete.component.ts","ng://reactive-json-form-ng/lib/material/formfield/formfield.module.ts","ng://reactive-json-form-ng/lib/material/common/card/card.component.ts","ng://reactive-json-form-ng/lib/material/common/table/table.component.ts","ng://reactive-json-form-ng/lib/material/common/container/container.component.ts","ng://reactive-json-form-ng/lib/material/common/grid-container/gridcontainer.component.ts","ng://reactive-json-form-ng/lib/material/common/tabs/tabs.component.ts","ng://reactive-json-form-ng/lib/material/common/code/code.component.ts","ng://reactive-json-form-ng/lib/material/common/common.module.ts"],"names":["Context","create","parent","publicProps","readonlyProps","hiddenProps","builtins","context","Object","defineReadonly","builtinsDef","assign","defineHidden","Props","prop","defineProperty","enumerable","writable","value","defineWeak","props","parseFloat","parseInt","isNaN","isFinite","Number","Math","Date","Array","JSON","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","this","constructor","prototype","AbstractWidget","_cdr","_expr","subs","_subscriptions","push","setup","element","def","type","options","console","log","widgetDef","dynOnSetup","bindings","parseDefObject","content","isArray","subscribeOptions","map","option","callback","opt","pipe","dynOnBeforeBind","dynOnAfterBind","_this","observables","this_1","tap","res","addSubscription","combineLatest","subscribe","markForCheck","ngOnDestroy","_unsubscribe","ngOnChanges","ngOnInit","_a","__values","o","m","Symbol","iterator","i","call","next","length","done","tslib_1.__values","_b","unsubscribe","Input","objDef","asObservable","expr","result","charAt","SyntaxError","slice","eval","isObservable","of","Expressions","expression","ast","parse","evaluate","ESpression","_super","es5","es5Rules","_parser","Parser","identifierRule","IdentifierRule","thisStr","literals","_keyParser","BinaryOperatorRule",".","MEMBER_EXP","extra","computed","noop","left","right","rules","_rxEval","ReactiveEval","tslib_1.__extends","e","warn","message","undefined","parseKey","EMPTY","lvalue","mapFactory","self","obj","index","$object","$value","$index","$key","reduceFactory","reduce","initValue","prev","$prev","expressionProvider","provide","useClass","DefaultWidgetComponent","cdr","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","AF_CONFIG_TOKEN","InjectionToken","WidgetRegistry","configs","Map","forEach","conf","widgets","register","_default","_registry","get","widget","component","set","Injectable","providedIn","Inject","ROOT_CONTEXT","WidgetDirective","_container","_cfr","_rootContext","_preCreate","_destroy","_unsuscribe","wdgWidget","parentContext","if","_ifSubs","cond","_widgetRef","_create","widgetClass","factory","resolveComponentFactory","createComponent","instance","destroy","Directive","ViewContainerRef","ComponentFactoryResolver","decorators","Optional","FormatPipe","transform","format","formatValue","Pipe","name","pure","match","exec","toUpperCase","num","formatNumber","formatDate","RoutedWidgetComponent","_route","snapshot","data","ActivatedRoute","WidgetsCoreModule","forRoot","config","ngModule","providers","useValue","multi","ANALYZE_FOR_ENTRY_COMPONENTS","NgModule","imports","CommonModule","declarations","entryComponents","exports","FORM_CONTROL","AbstractFormFieldWidget","bind","Error","isReactive","validate","validateContext","formControl","FormControl","ctrl","take","parentForm","FormGroup","addControl","FormArray","GET_OBSERVABLE","val","setValue","valueChanges","ReactiveFormsModule","MatAutocompleteModule","MatSidenavModule","MatButtonModule","MatIconModule","MatListModule","MatInputModule","MatDialogModule","MatToolbarModule","MatProgressBarModule","MatExpansionModule","MatSelectModule","MatTabsModule","MatSnackBarModule","MatSlideToggleModule","MatChipsModule","MatCardModule","MatCheckboxModule","MatSliderModule","MatTableModule","MatPaginatorModule","MatSortModule","MatMenuModule","InputWidgetComponent","styles","CheckboxWidgetComponent","ToggleWidgetComponent","SliderWidgetComponent","ButtonWidgetComponent","_lvalue","clickEvent","_event","_clickSubs","click","FormWidgetComponent","formGroup","RxObject","AutocompleteWidgetComponent","_filter","filteredOptions","startWith","filterValue","toLowerCase","enum","filter","includes","MaterialModule","CardWidgetComponent","TableWidgetComponent","tableDataSource","MatTableDataSource","dataSource","combineMixed","row","sort","table","$data","colTransform","colKeys","paginator","keys","actions","showCols","concat","applyFilter","firstPage","actionClick","rowData","actionIndex","action","ViewChild","MatPaginator","MatSort","ContainerWidgetComponent","dir","host","[class.dyn-flex]","[style.flex-direction]","GridContainerWidgetComponent","[class.dyn-grid]","TabsWidgetComponent","CodeWidgetComponent"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nexport interface IContextDef {\n  [identifier: string]: any;\n}\n\n\n/**\n * Helper class to hold context for expression evaluation.\n * It only gives a 'type' to a plain object.\n * It has static methods to manage inheritance and adding properties and builtins\n */\nexport class Context {\n\n  /** Helper definition of built-in objects */\n  static builtinsDef: IContextDef = {\n\n    // Builtin functions:\n    parseFloat: parseFloat,\n    parseInt: parseInt,\n    isNaN: isNaN,\n    isFinite: isFinite,\n\n    // Fundamental objects:\n    Number: Number,\n    Math: Math,\n    Date: Date,\n    Array: Array,\n    JSON: JSON,\n    Object: Object,\n\n  };\n\n  /**\n   * Creates a Context object, inheriting from an optional `parent` and adding custom properties\n   * and optionally builtin objects\n   * @param parent\n   * @param publicProps\n   * @param readonlyProps\n   * @param hiddenProps\n   * @param builtins Boolean. If true adds builtinobjects as public properties,\n   */\n  static create(parent?: Context, publicProps?: IContextDef,\n    readonlyProps?: IContextDef,\n    hiddenProps?: IContextDef,\n    builtins?: boolean): Context {\n\n    const context: Context = parent ? Object.create(parent) : new Context();\n\n    if (builtins) Context.defineReadonly(context, Context.builtinsDef);\n    if (publicProps) Object.assign(context, publicProps);\n    if (readonlyProps) Context.defineReadonly(context, readonlyProps);\n    if (hiddenProps) Context.defineHidden(context, hiddenProps);\n\n    return context;\n  }\n\n  /** Adds readonly properties to a Context */\n  static defineReadonly(context: Context, Props: IContextDef) {\n\n    // tslint:disable-next-line:forin\n    for (const prop in Props) {\n      Object.defineProperty(context, prop, {\n        enumerable: true,\n        writable: false,\n        value: Props[prop]\n      });\n    }\n\n    return context;\n  }\n\n  /** Adds hidden (non enumerable) properties to a Context */\n  static defineHidden(context: Context, hiddenProps: IContextDef) {\n\n    // tslint:disable-next-line:forin\n    for (const prop in hiddenProps) {\n      Object.defineProperty(context, prop, {\n        enumerable: false,\n        writable: true,\n        value: hiddenProps[prop]\n      });\n    }\n\n    return context;\n  }\n\n  /** adds public properties only if they don't exist in parent */\n  static defineWeak(context: Context, props: IContextDef) {\n\n    // tslint:disable-next-line:forin\n    for (const prop in props) {\n      if (prop in context) continue;\n      Object.defineProperty(context, prop, {\n        enumerable: true,\n        writable: true,\n        value: props[prop]\n      });\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\n/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { OnDestroy, ChangeDetectorRef, Input, OnChanges, OnInit } from '@angular/core';\nimport { Observable, of, Subscription, combineLatest, isObservable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport { IWidgetDef } from './widget.interface';\nimport { WidgetDirective } from './widget.directive';\nimport { Context } from './context';\nimport { Expressions } from './expressions';\n\nexport interface IOptionDef { [prop: string]: any; }\n\n/**\n * Base class for all dynamic widget elements\n */\nexport abstract class AbstractWidget implements OnDestroy, OnChanges, OnInit {\n\n  /** Configuration of the widget */\n  @Input() widgetDef: IWidgetDef;\n  @Input() context: Context;\n\n  /** String identifing the 'type' of the widget */\n  type: string;\n  /** Context to use for evaluations at this level */\n\n  /** Widget specific options all converted to observables, to unify between *expression* and\n   * *constant* notation in the properties definition.\n   * Each binding then auto updates the corresponding property in the derived widget.\n   */\n  bindings: { [prop: string]: Observable<any> } = {};\n  /** The input configuration of this object */\n\n  content: IWidgetDef[];\n\n  element: WidgetDirective;\n\n  set addSubscription(subs: Subscription) {\n    this._subscriptions.push(subs);\n  }\n\n  private _subscriptions: Subscription[] = [];\n\n\n  constructor(protected _cdr: ChangeDetectorRef, protected _expr: Expressions) {\n  }\n\n  /** Initialices the widget from a json definition */\n  setup(element: WidgetDirective, def: IWidgetDef, context: Context) {\n    def = def || { type: 'none' };\n    def.options = def.options || {};\n\n    this.type = def.type || 'none';\n    this.element = element;\n\n    console.log(`Widget setup ${this.type}`, this);\n\n    this.context = context;\n\n    this.widgetDef = def = this.dynOnSetup(def) || def;\n\n    this.bindings = parseDefObject(def.options, this.context, true, this._expr);\n\n    this.content = Array.isArray(def.content) ? def.content : typeof def.content === 'object' ? [def.content] : [];\n\n    this.subscribeOptions();\n  }\n\n  /**\n   * Helper function to add a `map` pipe to the corresponding input observable\n   */\n  map(option: string, callback: (v: any) => any) {\n    const opt: Observable<any> = this.bindings[option];\n    if (opt) this.bindings[option] = opt.pipe(map(callback));\n\n  }\n  /**\n   * Hook to customize the observable bindings befor subscribing.\n   * Tipically using the `this.map()` function to add processing to specific options\n   */\n  dynOnBeforeBind() { }\n\n  dynOnAfterBind() { }\n\n  /** Hook to customize widget definition before procesing it */\n  dynOnSetup(def: IWidgetDef) { return def; }\n\n  subscribeOptions() {\n    const observables = [];\n\n    // call hook for cofiguration of options before updating the bound value\n    this.dynOnBeforeBind();\n\n    for (const prop in this.bindings) // tslint:disable-line:forin\n      this.bindings[prop] = this.bindings[prop].pipe(tap(res => this[prop] = res));\n\n    // call hook after updating the bound value\n    this.dynOnAfterBind();\n\n    for (const prop in this.bindings) // tslint:disable-line:forin\n      observables.push(this.bindings[prop]);\n\n    this.addSubscription = combineLatest(observables).subscribe(() => this._cdr.markForCheck());\n\n  }\n\n  ngOnDestroy() {\n    this._unsubscribe();\n  }\n\n  /**\n   * OnChanges is never called on dynamic widget instantiation\n   * It is intended to provide the same interface is the widget is used declarative in a template\n   * instead of dynamically\n   */\n  ngOnChanges() {\n    console.log(`Widget OnChanges ${this.type}`, this);\n    this._unsubscribe();\n    this.setup(null, this.widgetDef, this.context);\n  }\n\n  ngOnInit() {\n    console.log(`Widget OnInit ${this.type}`, this);\n  }\n\n  private _unsubscribe() {\n    for (const subs of this._subscriptions) subs.unsubscribe();\n  }\n\n}\n\nexport function parseDefObject(objDef: IOptionDef, context: Context, asObservable: boolean, expr: Expressions) {\n\n  const result: IOptionDef = {};\n\n  if (!objDef) return null;\n\n  for (const prop in objDef) {\n\n    if (prop.charAt(prop.length - 1) === '=') {\n      if (typeof objDef[prop] !== 'string') throw new SyntaxError('Binding options must be \"string\" Iexpressions');\n      result[prop.slice(0, prop.length - 1)] = expr.eval(objDef[prop], context, asObservable);\n\n    } else result[prop] = asObservable && !isObservable(objDef[prop]) ? of(objDef[prop]) : objDef[prop];\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport {\n  ReactiveEval, StaticEval, Parser, es5Rules,\n  IdentifierRule, BinaryOperatorRule, MEMBER_EXP\n} from 'espression';\nimport { isObservable, of, EMPTY } from 'rxjs';\nimport { Context } from './context';\n\nexport interface IAst {\n  type: string;\n  [prop: string]: any;\n}\n\nexport abstract class Expressions {\n\n  abstract parseKey(expression: string): IAst;\n  abstract parse(expression: string): IAst;\n  /**\n   * Evaluates an expression in the given context.\n   * It uses the general parser.\n   *\n   * @param expression String expression\n   * @param context\n   * @param asObservable Always converts result to observable\n   */\n  eval(expression: string, context: Context, asObservable: boolean) {\n    const ast = this.parse(expression);\n\n    return this.evaluate(ast, context, asObservable);\n  }\n  abstract evaluate(ast: IAst, context: Context, asObservable: boolean): any;\n  abstract lvalue(expression: string, context: Context): { o, m };\n}\n\n\n/**\n * Service for Parsing and for evaluating expressions in Widget's configuration\n * The funcionality is provided by the ESpression package\n *\n */\nexport class ESpression extends Expressions {\n\n  private _parser: Parser;\n  private _keyParser: Parser;\n\n  private _rxEval: StaticEval;\n\n  constructor() {\n\n    super();\n    const es5 = es5Rules();\n\n    // remove Progam / Statements rules, and keep only expressions\n    es5[0] = [];\n\n    this._parser = new Parser(es5);\n\n\n    const identifierRule = new IdentifierRule({ thisStr: null, literals: {} });\n    this._keyParser = new Parser([\n      [new BinaryOperatorRule({\n        '.': {\n          type: MEMBER_EXP,\n          extra: { computed: false },\n          noop: true,\n          left: 'object', right: 'property',\n          rules: [[identifierRule]]\n        }\n      })],\n      [identifierRule]\n    ]);\n\n    this._rxEval = new ReactiveEval();\n  }\n\n  /**\n   * Parses the string expression using the general parsing rules.\n   *\n   * * @param expression\n   */\n  parse(expression: string): IAst {\n    let result: IAst;\n    try {\n      result = this._parser.parse(expression);\n    } catch (e) {\n      console.warn('Parsing Error', e.message, '\\n', expression);\n      result = undefined;\n    }\n\n    return result;\n  }\n\n  /**\n   * Parses the string expression using the restricted 'key' parsing rules,\n   * intended to parse bindings to model keys.\n   * As they must be lvalues the rules are more limited.\n   *\n   * @param expression\n   */\n  parseKey(expression: string): IAst {\n    let result: IAst;\n    try {\n      result = this._keyParser.parse(expression);\n    } catch (e) {\n      console.warn('Parsing Error', e.message, '\\n', expression);\n      result = undefined;\n    }\n\n    return result;\n  }\n\n  /**\n   * Evaluate an AST in the given context.\n   *\n   * @param ast Parsed expression to evaluate\n   * @param context\n   * @param asObservable Always converts result to observable\n   */\n  evaluate(ast: IAst, context: Context, asObservable: boolean) {\n    if (!ast) return asObservable ? EMPTY : undefined;\n\n    let result;\n    try {\n      result = this._rxEval.eval(ast, context);\n    } catch (e) {\n      console.warn('Error evaluating expression: ', e.message);\n      return asObservable ? of(undefined) : undefined;\n    }\n\n    return asObservable && !isObservable(result) ? of(result) : result;\n  }\n\n  /**\n   * Evaluates an expression using *key* parsing rules and returns and lvalue object:\n   * {o: evaluated_object, m: member}\n   *\n   * @param expression\n   * @param context\n   */\n  lvalue(expression: string, context: Context): { o, m } {\n    let result;\n\n    const ast = this.parseKey(expression);\n\n    if (!ast) return null;\n    try {\n      result = this._rxEval.lvalue(ast, context);\n    } catch (e) {\n      console.warn('Error evaluating expression: ', e.message);\n      return undefined;\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Expression version of the Array.map function.\n   * I replaces each array/object member with the result of evaluating an expression.\n   * The expression gets in its eval context the variables:\n   * `$object` the original object being maped\n   * `$value` the current value\n   * `$index` for arrays, the current index being replaced\n   * `$key` for objects, the current key\n   */\n  mapFactory() {\n    const self = this;\n    return function map(obj: Array<any> | Object, expression: string): Array<any> | Object {\n\n      if (!expression || typeof expression !== 'string') return obj;\n\n\n      const ast = self._parser.parse(expression);\n      if (!ast) return obj;\n\n      if (Array.isArray(obj)) {\n\n        return obj.map((value, index) =>\n          self._rxEval.eval(ast, Context.create(this, { // tslint:disable-line:no-invalid-this\n            $object: obj,\n            $value: value,\n            $index: index\n          })));\n      }\n      if (typeof obj === 'object') {\n\n        const result = {};\n\n        for (const prop in obj) // tslint:disable-line:forin\n\n          result[prop] = self._rxEval.eval(ast, Context.create(this, { // tslint:disable-line:no-invalid-this\n            $object: obj,\n            $value: obj[prop],\n            $key: prop\n          }));\n\n        return result;\n      }\n      return obj;\n    };\n  }\n\n  /**\n  * Expression version of the Array.reduce function.\n   * I replaces each array/object member with the result of evaluating an expression.\n   * The expression gets in its eval context the variables:\n   * `$object` the original object being maped\n   * `$value` the current element\n   * `$index` for arrays, the current index being replaced\n   * `$key` for objects, the current key\n   * `$prev` the previously returned value (the acumulation)\n   * @param obj\n   * @param expression\n   * @param initValue\n   */\n  reduceFactory() {\n    const self = this;\n\n    return function reduce(obj: Array<any> | Object, expression: string, initValue: any): Array<any> | Object {\n\n      if (!expression || typeof expression !== 'string') return obj;\n\n      const ast = self._parser.parse(expression);\n      if (!ast) return initValue;\n\n      if (Array.isArray(obj)) {\n        return obj.reduce(\n          (prev, value, index) =>\n\n            self._rxEval.eval(ast, Context.create(this, { // tslint:disable-line:no-invalid-this\n              $object: obj,\n              $prev: prev,\n              $value: value,\n              $index: index\n            })), initValue);\n      }\n      if (typeof obj === 'object') {\n\n        let result = initValue;\n\n        for (const prop in obj) // tslint:disable-line:forin\n\n          result = self._rxEval.eval(ast, Context.create(this, { // tslint:disable-line:no-invalid-this\n            $prev: result,\n            $value: obj[prop],\n            $key: prop\n          }));\n\n        return result;\n      }\n      return obj;\n    };\n  }\n}\n\nexport const expressionProvider = {\n  provide: Expressions,\n  useClass: ESpression\n};\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef} from '@angular/core';\nimport { AbstractWidget } from './abstractwidget';\nimport { Expressions } from './expressions';\n\n@Component({\n  selector: 'wdg-default',\n  template: '<div>Unknown widget \"{{type}}\"</div>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefaultWidgetComponent extends AbstractWidget {\n\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { Type, Inject, InjectionToken, Injectable } from '@angular/core';\nimport { AbstractWidget } from './abstractwidget';\nimport { DefaultWidgetComponent } from './defaultwidget.component';\n\nexport const AF_CONFIG_TOKEN = new InjectionToken<IAutoFormConfig>('AF_CONFIG_TOKEN');\n\n\nexport interface IWidgetConf {\n  type: string;\n  component: Type<AbstractWidget>;\n}\n\nexport interface IAutoFormConfig {\n  widgets?: IWidgetConf[] | IWidgetConf;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WidgetRegistry {\n\n  private _registry = new Map<string, Type<AbstractWidget>>();\n\n  private _default: Type<AbstractWidget>;\n\n\n  constructor(@Inject(AF_CONFIG_TOKEN) configs: IAutoFormConfig[] = []) {\n\n    configs.forEach(conf => conf.widgets && this.register(conf.widgets));\n\n    this._default = this._registry.get('default') || DefaultWidgetComponent;\n  }\n\n  register(widgets: IWidgetConf[] | IWidgetConf) {\n    if (!widgets) return;\n    if (!Array.isArray(widgets)) widgets = [widgets];\n\n    widgets.forEach(widget => {\n      if (widget.type && widget.component) this._registry.set(widget.type, widget.component);\n    });\n  }\n\n\n\n\n  get(type: string): Type<AbstractWidget> {\n    return this._registry.get(type) || this._default;\n  }\n\n}\n","import {\n  Directive, Input,\n  ViewContainerRef,\n  ComponentFactoryResolver, ComponentRef,\n  OnChanges, OnDestroy, Optional, Inject, InjectionToken,\n} from '@angular/core';\nimport { WidgetRegistry } from './widgetregistry.service';\nimport { Subscription } from 'rxjs';\nimport { AbstractWidget, parseDefObject } from './abstractwidget';\nimport { IWidgetDef } from './widget.interface';\nimport { Context } from './context';\nimport { Expressions } from './expressions';\n\n/** Injection token used to provide the default root context for widgets */\nexport const ROOT_CONTEXT = new InjectionToken<Context>('Widgets Root Context');\n\n@Directive({\n  selector: '[wdgWidget]'\n})\nexport class WidgetDirective implements OnChanges, OnDestroy {\n\n  @Input() wdgWidget: IWidgetDef;\n  @Input() parentContext: Context;\n\n  widget: AbstractWidget;\n  context: Context;\n  private _widgetRef: ComponentRef<AbstractWidget>;\n  private _ifSubs: Subscription;\n\n  constructor(\n    private _container: ViewContainerRef,\n    private _registry: WidgetRegistry,\n    private _cfr: ComponentFactoryResolver,\n    @Optional() @Inject(ROOT_CONTEXT) private _rootContext: Context,\n    private _expr: Expressions\n  ) {\n  }\n\n  ngOnChanges() {\n\n    this._preCreate();\n\n  }\n\n  ngOnDestroy() {\n    this._destroy();\n    this._unsuscribe();\n  }\n\n  private _preCreate() {\n    this.wdgWidget = this.wdgWidget || { type: 'none' };\n    this.parentContext = this.parentContext || this._rootContext;\n    this.context = Context.create(this.parentContext, parseDefObject(this.wdgWidget.context, this.parentContext, false, this._expr));\n\n    this._destroy();\n    this._unsuscribe();\n\n    if (this.wdgWidget.if) {\n      this._ifSubs = this._expr.eval(this.wdgWidget.if, this.context, true).subscribe(cond => {\n        if (cond && !this._widgetRef) this._create();\n        else this._destroy();\n      });\n    } else this._create();\n\n\n  }\n\n  private _create() {\n\n    const widgetClass = this._registry.get(this.wdgWidget.type);\n    const factory = this._cfr.resolveComponentFactory(widgetClass);\n    this._widgetRef = this._container.createComponent(factory);\n    this.widget = this._widgetRef.instance;\n\n    this.widget.setup(this, this.wdgWidget, this.context);\n\n  }\n\n  private _destroy() {\n    if (this._widgetRef) {\n      this._widgetRef.destroy();\n      this._widgetRef = null;\n    }\n\n  }\n\n  private _unsuscribe() {\n\n    if (this._ifSubs) {\n      this._ifSubs.unsubscribe();\n      this._ifSubs = null;\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { formatNumber, formatDate } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n/** Angular Pipe to format text */\n@Pipe({\n  name: 'format',\n  pure: true\n})\nexport class FormatPipe implements PipeTransform {\n  transform(value: any, format: any) {\n    return format ? formatValue(value, format) : value;\n  }\n}\n\nexport function formatValue(value: any, format: string) {\n  if (typeof format !== 'string' || value == null) return value;\n  const re = /^\\s*(\\w+)\\s*(:([\"'])([^\"']*)\\3)?$/;\n\n  const match: RegExpExecArray = re.exec(format);\n\n  if (!match[0]) return value;\n\n  switch (match[1].toUpperCase()) {\n    case 'NUMBER':\n      let num;\n      num = parseFloat(value);\n      return isNaN(num) ? value : formatNumber(num, 'en-US', match[4]);\n    case 'DATE':\n      return formatDate(value, match[4], 'en-US');\n  }\n\n  return value;\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IWidgetDef } from './widget.interface';\nimport { Context } from './context';\n\n@Component({\n  selector: 'wdg-widget',\n  template: '<ng-container [wdgWidget]=\"widgetDef\" [parentContext]=\"parentContext\"></ng-container>',\n\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RoutedWidgetComponent implements OnInit {\n\n  widgetDef: IWidgetDef;\n  parentContext: Context;\n\n  constructor(private _route: ActivatedRoute) { }\n  ngOnInit() {\n    this.widgetDef = this._route.snapshot.data.widgetDef || { type: 'empty' };\n    this.parentContext = this._route.snapshot.data.parentContext;\n  }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\n\nimport { DefaultWidgetComponent } from './defaultwidget.component';\nimport { AF_CONFIG_TOKEN, IAutoFormConfig } from './widgetregistry.service';\nimport { WidgetDirective } from './widget.directive';\nimport { FormatPipe } from './format';\nimport { RoutedWidgetComponent } from './routedwidget.component';\n\n\n@NgModule({\n\n  imports: [CommonModule],\n  declarations: [\n    WidgetDirective,\n    RoutedWidgetComponent,\n    DefaultWidgetComponent,\n    FormatPipe\n  ],\n  entryComponents: [DefaultWidgetComponent],\n  exports: [\n    WidgetDirective,\n    RoutedWidgetComponent,\n    FormatPipe\n  ]\n})\nexport class WidgetsCoreModule {\n\n  static forRoot(config: IAutoFormConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: WidgetsCoreModule,\n      providers: [\n        { provide: AF_CONFIG_TOKEN, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true }\n      ]\n    };\n  }\n}\n\n\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { FormControl, FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { ChangeDetectorRef} from '@angular/core';\nimport { GET_OBSERVABLE, isReactive, INode } from 'espression';\nimport { take, map } from 'rxjs/operators';\nimport { AbstractWidget } from './abstractwidget';\nimport { Context } from './context';\nimport { Expressions } from './expressions';\nimport { IWidgetDef } from './widget.interface';\n\n\nexport const FORM_CONTROL = Symbol('FormControl');\nexport class AbstractFormFieldWidget extends AbstractWidget {\n\n\n  formControl: FormControl;\n\n  validate: INode;\n  validateContext: Context;\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n  dynOnSetup(def: IWidgetDef): IWidgetDef {\n\n    // get bound model\n    if (!def.bind)\n      throw new Error('Form field widgets must have a \"bind\" property defined');\n\n    const lvalue = this._expr.lvalue(def.bind, this.context);\n\n    if (!lvalue)\n      throw new Error('Form field \"bind\" property must be an identifier or member expression');\n\n    if (!isReactive(lvalue.o))\n      throw new Error('Bound Key must be of Reactive Type');\n\n\n    // setup validation\n\n\n    if (def.validate && (this.validate = this._expr.parse(def.validate))) {// tslint:disable-line:whitespace\n      this.validateContext = Context.create(this.context);\n\n      this.formControl = new FormControl(null, null, (ctrl: AbstractControl) => {\n        this.validateContext['$value'] = ctrl.value;\n        return this._expr.evaluate(this.validate, this.validateContext, true).pipe(\n          take(1),\n          map(res => {\n            return res ? null : { validate: 'validation error' };\n          })\n        );\n      });\n    } else this.formControl = new FormControl();\n\n    const parentForm: FormGroup | FormArray = this.context[FORM_CONTROL];\n    if (parentForm) {\n      if (parentForm instanceof FormGroup) parentForm.addControl(lvalue.m, this.formControl);\n      else if (parentForm instanceof FormArray) parentForm.push(this.formControl);\n    }\n\n    // listen to bound context value and update on changes\n    this.addSubscription = lvalue.o[GET_OBSERVABLE](lvalue.m).subscribe(val =>\n      val !== this.formControl.value && this.formControl.setValue(val));\n\n    // listen to control changes to update bound context value\n    this.addSubscription = this.formControl.valueChanges.subscribe(val => {\n      if (val !== lvalue.o[lvalue.m])\n        lvalue.o[lvalue.m] = val;\n    });\n\n\n    return def;\n  }\n}\n","/*!\n * Copyright (c) 2017 Adrian Panella <ianchi74@outlook.com>, contributors.\n * Licensed under the MIT license.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatMenuModule } from '@angular/material/menu';\n\n/**\n * Helper module to centrally import all material components\n */\n@NgModule({\n  exports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatProgressBarModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatSnackBarModule,\n    MatSlideToggleModule,\n    MatChipsModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n  ]\n})\nexport class MaterialModule { }\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Expressions, AbstractFormFieldWidget } from '../../../core';\n\n@Component({\n  selector: 'wdg-input',\n  template: `<mat-form-field style.width=\"100%\">\n\n    <mat-label *ngIf=\"title\">\n        {{ title }}\n    </mat-label>\n\n    <input matInput\n           name=\"aaa\"\n           [type]=\"type || 'text'\"\n           [formControl]=\"formControl\"\n           [placeholder]=\"placeholder\"\n           [required]=\"required\">\n\n    <mat-error [id]=\"null\">\n\n    </mat-error>\n\n    <mat-hint *ngIf=\"description\"\n              [id]=\"null\">\n        {{ description }}\n    </mat-hint>\n\n</mat-form-field>\n`,\n  styles: [``],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InputWidgetComponent extends AbstractFormFieldWidget {\n\n  title: string;\n  description: string;\n  placeholder: string;\n  required: boolean;\n\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Expressions, AbstractFormFieldWidget } from '../../../core';\n\n@Component({\n  selector: 'wdg-checkbox',\n  template: `<mat-checkbox labelPosition=\"before\" [formControl]=\"formControl\">\n  {{title}}\n</mat-checkbox>\n`,\n  styles: [``],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxWidgetComponent extends AbstractFormFieldWidget {\n  title: string;\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Expressions, AbstractFormFieldWidget } from '../../../core';\n\n@Component({\n  selector: 'wdg-toggle',\n  template: `<mat-slide-toggle labelPosition=\"before\">\n  {{ title}}\n</mat-slide-toggle>\n`,\n  styles: [``],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleWidgetComponent extends AbstractFormFieldWidget {\n\n  title: string;\n\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Expressions, AbstractFormFieldWidget } from '../../../core';\n\n@Component({\n  selector: 'wdg-slider',\n  template: `<span>{{title}}</span>\n<mat-slider [formControl]=\"formControl\"></mat-slider>\n`,\n  styles: [``],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SliderWidgetComponent extends AbstractFormFieldWidget {\n\n  title: string;\n\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { isReactive } from 'espression';\nimport { AbstractWidget, Expressions, IWidgetDef, } from '../../../core';\n\n@Component({\n  selector: 'wdg-button',\n  template: `<button mat-button (click)=\"clickEvent($event)\">\n  {{title}}\n</button>\n`,\n  styles: [``],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonWidgetComponent extends AbstractWidget {\n\n  title: string;\n  click: string;\n\n  private _lvalue: { o, m };\n  private _clickSubs: Subscription;\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n  dynOnSetup(def: IWidgetDef) {\n\n    if (def.bind) {\n\n      const lvalue = this._expr.lvalue(def.bind, this.context);\n\n      if (!lvalue)\n        throw new Error('Form field \"bind\" property must be an identifier or member expression');\n\n      if (!isReactive(lvalue.o))\n        throw new Error('Bound Key must be of Reactive Type');\n\n      this._lvalue = lvalue;\n    }\n\n    return def;\n  }\n\n  clickEvent(_event) {\n\n    if (this._clickSubs) {\n      this._clickSubs.unsubscribe();\n      this._clickSubs = null;\n    }\n\n    if (this.click) {\n      this._clickSubs = this._expr.eval(this.click, this.context, true).pipe(\n        take(1)).subscribe(res =>\n          this._lvalue.o[this._lvalue.m] = res);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { RxObject } from 'espression';\nimport { AbstractWidget, IWidgetDef, Context, Expressions, FORM_CONTROL } from '../../../core';\n\n@Component({\n  selector: 'wdg-form',\n  template: `<ng-container *ngFor=\"let element of content\" [wdgWidget]=\"element\" [parentContext]=\"context\">\n\n</ng-container>\n`,\n  styles: [``],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormWidgetComponent extends AbstractWidget {\n\n  formGroup: FormGroup;\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n  dynOnSetup(def: IWidgetDef) {\n\n    this.formGroup = new FormGroup({});\n\n    // register with parent form, if any\n    const parentForm: FormGroup | FormArray = this.context[FORM_CONTROL];\n    if (parentForm) {\n      if (parentForm instanceof FormGroup) parentForm.addControl('control', this.formGroup);\n      else if (parentForm instanceof FormArray) parentForm.push(this.formGroup);\n    }\n\n    // save this FormGroup as parent form for the children\n    Context.defineHidden(this.context, { [FORM_CONTROL]: this.formGroup });\n\n    // create a Store for the variables\n\n    this.context['$model'] = RxObject({});\n    return def;\n  }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { Expressions, AbstractFormFieldWidget } from '../../../core';\n\n@Component({\n  selector: 'wdg-autocomplete',\n  template: `<mat-form-field style.width=\"100%\">\n\n  <mat-label *ngIf=\"title\">\n    {{ title }}\n  </mat-label>\n\n  <input matInput name=\"aaa\" [type]=\"type || 'text'\" [formControl]=\"formControl\" [placeholder]=\"placeholder\"\n    [matAutocomplete]=\"auto\">\n\n  <mat-error [id]=\"null\">\n\n  </mat-error>\n\n  <mat-hint *ngIf=\"description\" [id]=\"null\">\n    {{ description }}\n  </mat-hint>\n\n  <mat-autocomplete #auto=\"matAutocomplete\">\n    <mat-option *ngFor=\"let option of filteredOptions | async; index as optIndex\" [value]=\"option\">\n      {{option}}\n    </mat-option>\n  </mat-autocomplete>\n\n</mat-form-field>\n`,\n  styles: [``],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AutocompleteWidgetComponent extends AbstractFormFieldWidget implements OnInit {\n\n  title: string;\n  description: string;\n  placeholder: string;\n\n  enum: string[] = [];\n  enumLabel: string[];\n  filteredOptions: Observable<string[]>;\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n\n\n  dynOnBeforeBind() {\n    this.map('enum', val => {\n      return Array.isArray(val) ? val : [];\n    });\n  }\n\n  dynOnAfterBind() {\n    this.map('enum', val => (this._filter(this.formControl.value), val));\n  }\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.filteredOptions = this.formControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(value: string): string[] {\n\n    const filterValue = value && value.toLowerCase();\n\n    return this.enum.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\n\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { WidgetsCoreModule } from '../../core';\n\nimport { InputWidgetComponent } from './input/input.component';\nimport { CheckboxWidgetComponent } from './checkbox/checkbox.component';\nimport { ToggleWidgetComponent } from './toggle/toggle.component';\nimport { SliderWidgetComponent } from './slider/slider.component';\nimport { ButtonWidgetComponent } from './button/button.component';\nimport { FormWidgetComponent } from './form/form.component';\nimport { AutocompleteWidgetComponent } from './autocomplete/autocomplete.component';\n\n\n@NgModule({\n  imports: [\n    MaterialModule,\n\n    WidgetsCoreModule.forRoot({\n      widgets: [\n        { type: 'input', component: InputWidgetComponent },\n        { type: 'checkbox', component: CheckboxWidgetComponent },\n        { type: 'toggle', component: ToggleWidgetComponent },\n        { type: 'slider', component: SliderWidgetComponent },\n        { type: 'button', component: ButtonWidgetComponent },\n        { type: 'form', component: FormWidgetComponent },\n        { type: 'autocomplete', component: AutocompleteWidgetComponent },\n\n      ]\n    })\n  ],\n  declarations: [\n    InputWidgetComponent,\n    CheckboxWidgetComponent,\n    ToggleWidgetComponent,\n    SliderWidgetComponent,\n    ButtonWidgetComponent,\n    FormWidgetComponent,\n    AutocompleteWidgetComponent\n  ],\n  exports: []\n})\nexport class FormFieldWidgetsModule { }\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef} from '@angular/core';\nimport { AbstractWidget, IWidgetDef, Expressions } from '../../../core';\n\n@Component({\n  selector: 'wdg-card',\n  template: `<mat-card>\n  <mat-card-title *ngIf=\"title\">{{title}}</mat-card-title>\n  <mat-card-subtitle *ngIf=\"description\">{{description}}</mat-card-subtitle>\n  <mat-card-content>\n    <ng-container *ngFor=\"let element of content\" [wdgWidget]=\"element\" [parentContext]=\"context\"></ng-container>\n  </mat-card-content>\n  <mat-card-actions align=\"end\" *ngIf=\"actions\">\n    <ng-container *ngFor=\"let element of actions\" [wdgWidget]=\"element\" [parentContext]=\"context\"></ng-container>\n  </mat-card-actions>\n</mat-card>\n`,\n  styles: [``],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardWidgetComponent extends AbstractWidget {\n\n  title: string;\n  description: string;\n  actions: IWidgetDef[];\n\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\n\nimport { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild} from '@angular/core';\nimport { Observable, isObservable } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { AbstractWidget, Context, Expressions, parseDefObject } from '../../../core';\nimport { combineMixed } from 'espression';\n\n@Component({\n  selector: 'wdg-table',\n  template: `<div>\n  <section class=\"table-title\">\n    <h6>{{title}}</h6>\n\n    <div class=\"spacer\"></div>\n\n    <mat-form-field *ngIf=\"filterBy\">\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n    </mat-form-field>\n  </section>\n\n  <section class=\"mat-elevation-z1\">\n    <table mat-table [dataSource]=\"tableDataSource\" matSort [matSortDisabled]=\"!disableSort\">\n\n      <!-- Dynamic Column definitions-->\n      <ng-container [matColumnDef]=\"colKey\" *ngFor=\"let colKey of colKeys; index as colIndex\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header [disabled]=\"disableSort?.indexOf(colKey) >= 0\"> {{colHeaders[colIndex] || colKey}} </th>\n        <ng-container *ngIf=\"colFormat && colFormat[colIndex]; else noFormatCellDef\">\n          <td mat-cell *matCellDef=\"let rowData\">{{rowData[colKey] | format:colFormat[colIndex]}}</td>\n        </ng-container>\n        <ng-template #noFormatCellDef>\n          <td mat-cell *matCellDef=\"let rowData\">{{rowData[colKey]}}</td>\n        </ng-template>\n      </ng-container>\n\n      <ng-container *ngIf=\"actions?.length\" [matColumnDef]=\"'__actions__'\">\n        <th mat-header-cell *matHeaderCellDef > {{actionsHeader || 'Actions'}} </th>\n        <td mat-cell *matCellDef=\"let rowData\">\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n            <mat-icon svgIcon=\"dots-vertical\"></mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n\n            <button mat-menu-item *ngFor=\"let action of actions; index as actionIndex\" (click)=\"actionClick(rowData, actionIndex)\">\n              <mat-icon [svgIcon]=\"actions[actionIndex].icon\"></mat-icon>\n              <span>{{actions[actionIndex].label}}</span>\n            </button>\n          </mat-menu>\n        </td>\n      </ng-container>\n\n\n      <!-- Row definitions-->\n      <ng-container *ngIf=\"colHeaders\">\n        <tr mat-header-row *matHeaderRowDef=\"showCols\" class=\"header-row\"></tr>\n      </ng-container>\n      <tr mat-row *matRowDef=\"let element; columns: showCols;\" class=\"data-row\"></tr>\n    </table>\n\n    <mat-paginator [class.hiddenPaginator]=\"!pageSizes\" [pageSizeOptions]=\"pageSizes\" [hidePageSize]=\"pageSizes?.length<=1\"></mat-paginator>\n  </section>\n</div>\n`,\n  styles: [`dyn-table table{width:100%}dyn-table tr.data-row:hover{background:#f5f5f5}dyn-table tr.data-row:active{background:#efefef}dyn-table .data-row td{border-bottom-width:0}dyn-table mat-paginator.hiddenPaginator{display:none}dyn-table .table-title{display:flex;flex-flow:row}dyn-table .table-title>*{flex:0 0 auto}dyn-table .table-title .spacer{flex:1 1 auto}`],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableWidgetComponent extends AbstractWidget implements OnInit {\n\n  title: string;\n  dataSource: Observable<any[]> | any[];\n  tableDataSource: MatTableDataSource<{ [prop: string]: any }>;\n\n  colKeys: string[];\n  colHeaders: string[];\n  colsVisible: string[];\n  pageSizes: number[];\n  filterBy: string[];\n  disableSort: string[] = [];\n\n  colTransform: string[];\n  colFormat: string[];\n\n  actions: { icon: string, label: string, action: string }[] = [];\n  actionsHeader: string;\n  showCols: string[];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n    this.tableDataSource = new MatTableDataSource();\n  }\n\n  dynOnBeforeBind() {\n\n    const opt = this.widgetDef.options;\n\n\n    // if the only source is a static array, lets check if it has 'property=' columns to evaluate\n    // and add the auto binding\n    if (opt && !opt['dataSource='] &&\n      Array.isArray(opt.dataSource)) {\n\n      const dataSource = <Observable<any[]>>combineMixed(opt.dataSource.map(row =>\n        combineMixed(parseDefObject(row, this.context, false, this._expr)), false), false);\n      if (isObservable(dataSource)) this.bindings.dataSource = dataSource;\n      else this.dataSource = dataSource;\n    }\n\n\n    this.map('disableSort', sort => {\n      if (sort === true) return null;\n      if (!Array.isArray(sort)) return [];\n      return sort;\n\n    });\n\n    this.map('dataSource', (table: any[]) =>\n      this.tableDataSource.data = table.map(row => {\n        row = parseDefObject(row, Context.create(this.context, { $data: row }), false, this._expr);\n\n        if (Array.isArray(this.colTransform)) {\n\n          for (let i = 0; i < this.colTransform.length; i++) {\n            if (this.colTransform[i]) {\n              const context: any = Context.create(this.context);\n              context.$data = row[this.colKeys[i]];\n              row[this.colKeys[i]] = this._expr.eval(this.colTransform[i], context, false);\n            }\n          }\n\n        }\n\n        return row;\n      })\n    );\n\n    this.map('pageSizes', (value) => {\n      if (!Array.isArray(value) || !value.length) {\n        this.tableDataSource.paginator = null;\n        return null;\n      }\n      this.tableDataSource.paginator = this.paginator;\n      return value;\n    });\n\n    this.map('colKeys', keys => {\n      if (this.actions && this.actions.length) this.showCols = keys.concat('__actions__');\n      else this.showCols = keys;\n      return keys;\n    });\n    this.map('actions', actions => {\n      if (!Array.isArray(actions)) actions = [];\n\n      this.showCols = actions.length ? this.colKeys.concat('__actions__') : this.colKeys;\n\n      return actions;\n    });\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.tableDataSource.sort = this.sort;\n  }\n  applyFilter(filterValue: string) {\n    this.tableDataSource.filter = filterValue;\n\n    if (this.tableDataSource.paginator) {\n      this.tableDataSource.paginator.firstPage();\n    }\n  }\n\n  actionClick(rowData: any, actionIndex: number) {\n\n    const context = Context.create(this.context, { $data: rowData });\n\n    this.addSubscription = this._expr.eval(this.actions[actionIndex].action, context, true).subscribe(\n      () => {\n        // TODO logic to reload table\n      }\n    );\n  }\n\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef} from '@angular/core';\nimport { AbstractWidget, Expressions } from '../../../core';\n\n@Component({\n  selector: 'wdg-container',\n  template: `<ng-container *ngFor=\"let element of content\" [wdgWidget]=\"element\" [parentContext]=\"context\">\n\n</ng-container>\n`,\n  styles: [`dyn-container.dyn-flex{display:flex;flex-wrap:wrap}dyn-container.dyn-flex>*{flex:1 1 auto}`],\n\n  // tslint:disable-next-line:use-host-property-decorator\n  host: {\n    '[class.dyn-flex]': 'true',\n    '[style.flex-direction]': 'direction'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerWidgetComponent extends AbstractWidget {\n\n  direction: string;\n\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n  dynOnBeforeBind() {\n\n    this.map('direction', dir => dir || 'row');\n  }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef} from '@angular/core';\nimport { AbstractWidget, Expressions } from '../../../core';\n\n@Component({\n  selector: 'wdg-grid-container',\n  template: `<ng-container *ngFor=\"let element of content\" [wdgWidget]=\"element\" [parentContext]=\"context\">\n\n</ng-container>\n`,\n  styles: [`dyn-grid-container.dyn-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(300px,1fr));grid-auto-flow:row dense}`],\n\n  // tslint:disable-next-line:use-host-property-decorator\n  host: {\n    '[class.dyn-grid]': 'true',\n    '[style.flex-direction]': 'direction'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridContainerWidgetComponent extends AbstractWidget {\n\n  direction: string;\n\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n  dynOnBeforeBind() {\n\n    this.map('direction', dir => dir || 'row');\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { AbstractWidget, Expressions } from '../../../core';\n\n@Component({\n  selector: 'wdg-tabs',\n  template: `<mat-tab-group>\n\n  <mat-tab *ngFor=\"let tab of content; index as tabIndex\" [label]=\"tabLabels[tabIndex] || ('Tab'+tabIndex)\">\n\n    <ng-template matTabContent>\n      <ng-container [wdgWidget]=\"tab\" [parentContext]=\"context\"></ng-container>\n    </ng-template>\n\n  </mat-tab>\n\n\n</mat-tab-group>\n`,\n  styles: [``],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabsWidgetComponent extends AbstractWidget implements OnInit {\n\n  tabLabels: string[];\n  constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n    super(cdr, expr);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef} from '@angular/core';\nimport { AbstractWidget, Expressions } from '../../../core';\n\n@Component({\n    selector: 'wdg-code',\n    template: `<code>\n{{text}}\n</code>`,\n    styles: [`dyn-code code{white-space:pre}`],\n\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CodeWidgetComponent extends AbstractWidget {\n\n    text: string;\n\n    constructor(cdr: ChangeDetectorRef, expr: Expressions) {\n        super(cdr, expr);\n    }\n\n}\n","/**\n * Copyright (c) 2018 Adrian Panella <ianchi74@outlook.com>\n *\n * This software is released under the MIT License.\n * https://opensource.org/licenses/MIT\n */\n\n\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { WidgetsCoreModule } from '../../core';\n\nimport { CardWidgetComponent } from './card/card.component';\nimport { TableWidgetComponent } from './table/table.component';\nimport { ContainerWidgetComponent } from './container/container.component';\nimport { GridContainerWidgetComponent } from './grid-container/gridcontainer.component';\nimport { TabsWidgetComponent } from './tabs/tabs.component';\nimport { CodeWidgetComponent } from './code/code.component';\n\n@NgModule({\n  imports: [\n    MaterialModule,\n\n    WidgetsCoreModule.forRoot({\n      widgets: [\n        { type: 'card', component: CardWidgetComponent },\n        { type: 'table', component: TableWidgetComponent },\n        { type: 'container', component: ContainerWidgetComponent},\n        { type: 'grid-container', component: GridContainerWidgetComponent},\n        { type: 'tabs', component: TabsWidgetComponent},\n        { type: 'code', component: CodeWidgetComponent},\n      ]\n    })\n  ],\n  declarations: [\n    CardWidgetComponent,\n    TableWidgetComponent,\n    ContainerWidgetComponent,\n    GridContainerWidgetComponent,\n    TabsWidgetComponent,\n    CodeWidgetComponent,\n  ],\n  exports: []\n})\nexport class CommonWidgetsModule { }\n"]}